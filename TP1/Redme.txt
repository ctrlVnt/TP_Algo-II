2 Seuillage de l'image

Nous utilisons un algorithme 
qui collecte les pixels en 2 variables,
une pour l'entrée et une pour la sortie,
puis nous faisons défiler toutes les lignes 
de pixels et, en fonction du niveau de gris 
du pixel unique, nous le définissons sur blanc
ou noir.

3 Découpage de l'image seuillée en composantes connexes

Avec l'algorithme union-find on crée l'ensemble de pixels sur lequel on va travailler, 
puis avec l'algorithme "composantesConnexes" on voit le niveau de gris des pixels, si 
ça correspond on les met dans le même groupe.
Nous utilisons un calloc sur "couleur" pour attribuer des couleurs au pixel numéro n. 

3.4 Temps d'exécution de Union-Find.

Avec ced.jpeg image le temps est "time = 3,112641 ms."
Avec Picture1.jpg le temps est "time = 2,793653 ms."

4 Affichage de la couleur moyenne pour chaque région

Au lieu d'afficher une couleur aléatoire pour chaque région nous avons désormais une couleur
qui correspond à la moyenne de chaque canal de couleur

5 Connexité floue et découpage en composantes connexes floues

Nous avons implémenter une fonction similarities qui se base sur du TSV
On remarque que dès que le seuillage est un peu élevé l'image devient vite très éloigné de l'image 
d'origine avec beaucoup de gris (pour Picture1.jpg)
Mais pour ced.jpeg c'est le bleu qui l'emporte, on comprend donc que notre implémentation fonctionne
comme prévu